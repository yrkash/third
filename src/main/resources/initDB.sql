DROP TABLE IF EXISTS person_roles;
DROP TABLE IF EXISTS person;
DROP TABLE IF EXISTS measurement;
DROP TABLE IF EXISTS sensor;

CREATE TABLE sensor(
                       id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                       name varchar(100) NOT NULL UNIQUE
);

CREATE TABLE measurement(
                     id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                     value double precision not null,
                     raining bool,
                     created_at timestamp not null,
                     sensor varchar(100) REFERENCES sensor(name)
);

CREATE TABLE person(
                       id int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                       username varchar(100) NOT NULL,
                       year_of_birth int NOT NULL,
                       password varchar NOT NULL
);

create table if not exists person_roles
(
    person_id bigint       not null,
    role    varchar(255) not null,
    primary key (person_id, role),
    constraint fk_person_roles_person foreign key (person_id) references person (id) on delete cascade on update no action
);


INSERT INTO sensor(name) VALUES ('nnov_1');
INSERT INTO sensor(name) VALUES ('mos_77');
INSERT INTO sensor(name) VALUES ('vsk_10');
INSERT INTO measurement(value, raining, created_at, sensor) VALUES (18.9, true, '2023-05-10 23:12:24.609670', 'vsk_10');
INSERT INTO person(username, year_of_birth, password) VALUES ('user', 1988, '12345');
INSERT INTO person(username, year_of_birth, password) VALUES ('admin', 1988, '12345');

insert into person_roles (person_id, role)
values (1, 'ROLE_USER'),
       (2, 'ROLE_ADMIN'),
       (2, 'ROLE_USER');

DELETE FROM person WHERE id = 1;
DELETE FROM person WHERE id = 2;

insert into person_roles (person_id, role)
values (3, 'ROLE_ADMIN');

